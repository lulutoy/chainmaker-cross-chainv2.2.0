/*
Copyright (C) THL A29 Limited, a Tencent company. All rights reserved.
 SPDX-License-Identifier: Apache-2.0
*/

package fabric

import (
	"encoding/json"
	"testing"

	"chainmaker.org/chainmaker-cross/conf"
	"chainmaker.org/chainmaker-cross/event"
	"chainmaker.org/chainmaker-cross/logger"
	eventproto "chainmaker.org/chainmaker-cross/pb/protogo/event"
	"github.com/gogo/protobuf/proto"
	pb "github.com/hyperledger/fabric-protos-go/peer"
	"github.com/hyperledger/fabric-sdk-go/pkg/client/channel"
	"github.com/hyperledger/fabric-sdk-go/pkg/common/providers/fab"
	"github.com/stretchr/testify/require"
)

const (
	chainID = "mychannel"
	txID    = "89d7efbd1c892156bdaa057af6b9ae23d938ef3ba64264d5c177c09ac86b4484"
)

func TestNewFabricAdapter(t *testing.T) {
	fabAdapter, err := NewFabricAdapter(chainID, configFile, nil, nil)
	require.Nil(t, err)
	require.NotNil(t, fabAdapter)
}

func TestFabricAdapter_GetChainID(t *testing.T) {
	fabAdapter, err := NewFabricAdapter(chainID, configFile, nil, nil)
	require.Nil(t, err)
	require.NotNil(t, fabAdapter)

	require.Equal(t, fabAdapter.GetChainID(), chainID)
}

func TestFabricAdapter_QueryByTxKey(t *testing.T) {
	fabAdapter, err := NewFabricAdapter(chainID, configFile, nil, nil)
	require.Nil(t, err)
	require.NotNil(t, fabAdapter)

	// init configuration
	initAdapterConf()
	resp, err := fabAdapter.QueryByTxKey(txID)
	require.Nil(t, err)
	require.NotNil(t, resp)
}

func TestFabricAdapter_QueryTx(t *testing.T) {
	fabAdapter, err := NewFabricAdapter(chainID, configFile, nil, logger.GetLogger(logger.ModuleAdapter))
	require.Nil(t, err)
	require.NotNil(t, fabAdapter)

	header := NewTxHeader(chainID, txID)
	txRequest := NewTxRequest(header, []byte("request"), []byte("payload"), []byte("signature"))
	bz, err := json.Marshal(txRequest)
	require.NoError(t, err)

	initAdapterConf()
	resp, err := fabAdapter.QueryTx(bz)
	require.NoError(t, err)
	require.NotNil(t, resp)
}

func TestFabricAdapter_InvokeWithOutProof(t *testing.T) {
	fabAdapter, err := NewFabricAdapter(chainID, configFile, nil, logger.GetLogger(logger.ModuleAdapter))
	require.Nil(t, err)
	require.NotNil(t, fabAdapter)

	// prepare payload
	req := channel.Request{
		ChaincodeID: fabcarContract,
		Fcn:         "ChangeCarOwner",
		Args:        packArgs("CAR0", "OWNER"),
	}
	bz, err := json.Marshal(req)
	require.Nil(t, err)
	require.NotNil(t, bz)
	eve := event.NewExecuteTransactionEvent("crossID", chainID, bz, "", nil)

	initAdapterConf()
	resp, err := fabAdapter.Invoke(eve)
	require.Nil(t, err)
	require.NotNil(t, resp)
}

func TestFabricAdapter_InvokeWithSignedProposal(t *testing.T) {
	fabAdapter, err := NewFabricAdapter(chainID, configFile, nil, logger.GetLogger(logger.ModuleAdapter))
	require.Nil(t, err)
	require.NotNil(t, fabAdapter)

	// parse crossTx
	bz := "{\"ChainID\":\"mychannel\",\"Index\":1,\"ExecutePayload\":\"eyJoZWFkZXIiOnsiY2hhaW5faWQiOiJteWNoYW5uZWwiLCJ0eF9pZCI6IjYzNjUzMTU4NjJmYTY2ZjM4YWY1NjcyNmIyNmIxMWE1OGUwMzVkNDg3YjYzZDI2YjVjYmIxZTdlMzc4MGQ3ZDkifSwicmVxdWVzdCI6ImV5SkRhR0ZwYm1OdlpHVkpSQ0k2SW5SeVlXNXpZV04wYVc5dVgzUnRjREVpTENKTVlXNW5Jam93TENKVWNtRnVjMmxsYm5STllYQWlPbTUxYkd3c0lrWmpiaUk2SWtWNFpXTjFkR1VpTENKQmNtZHpJanBiSWs1WFNtbFBSMUV6V1hwVmQwOVVXWHBPUkVacldtcHJORnBVWXpGWmVrRTFUbnBOZUZsdFNUVk5WMFU5SWl3aVpYbEthbUl5TlRCamJVWnFaRVk1ZFZsWE1XeEphbTlwV20xR2FWa3lSbmxKYVhkcFlsZFdNR0ZIT1d0SmFtOXBVVEpvYUdKdFpHeFJNa1o1VkROa2RWcFlTV2xNUTBwM1dWaEthR0pZVFdsUGJITnBVVEJHVTAxRFNYTkphemxZVkd0V1UwMVRTbVJtVVQwOUlpd2laWGxLYW1JeU5UQmpiVVpxWkVZNWRWbFhNV3hKYW05cFdtMUdhVmt5Um5sSmFYZHBZbGRXTUdGSE9XdEphbTlwVlZoV2JHTnViRUppUjNoRVdWaEtla2x1TUQwaVhTd2lTWE5KYm1sMElqcG1ZV3h6WlgwPSIsInBheWxvYWQiOiJDc3NIQ25NSUF4b01DTUc3NDRjR0VQakMwZXdDSWdsdGVXTm9ZVzV1Wld3cVFEWXpOalV6TVRVNE5qSm1ZVFkyWmpNNFlXWTFOamN5Tm1JeU5tSXhNV0UxT0dVd016VmtORGczWWpZelpESTJZalZqWW1JeFpUZGxNemM0TUdRM1pEazZGQklTRWhCMGNtRnVjMkZqZEdsdmJsOTBiWEF4RXRNR0NyWUdDZ2RQY21jeFRWTlFFcW9HTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTkxha05EUVdSSFowRjNTVUpCWjBsU1FVdHhVR28yYWxWclNtVlRibnBRWnpOQmFtbDNlVWwzUTJkWlNVdHZXa2w2YWpCRlFYZEpkMk42UlV3S1RVRnJSMEV4VlVWQ2FFMURWbFpOZUVWNlFWSkNaMDVXUWtGblZFTnJUbWhpUjJ4dFlqTktkV0ZYUlhoR2FrRlZRbWRPVmtKQlkxUkVWazVvWW1sQ1J3cGpiVVoxV1RKc2Vsa3lPSGhIVkVGWVFtZE9Wa0pCYjFSRlJ6bDVXbnBGZFZwWWFHaGlXRUp6V2xNMWFtSXlNSGhJUkVGaFFtZE9Wa0pCVFZSRk1rNW9Da3h0T1hsYWVrVjFXbGhvYUdKWVFuTmFVelZxWWpJd2QwaG9ZMDVOYWtWM1RucEJNMDFFWjNoTlZFRjNWMmhqVGsxNlJYZE9la0V4VFVSbmVFMVVRWGNLVjJwQ2MwMVJjM2REVVZsRVZsRlJSMFYzU2xaVmVrVlVUVUpGUjBFeFZVVkRRazFMVVRKR2MyRlhXblpqYlRWd1dWUkZWMDFDVVVkQk1WVkZRbmhOVGdwVk1rWjFTVVZhZVZsWE5XcGhXRTVxWW5wRlVFMUJNRWRCTVZWRlEzaE5SMWt5ZUhCYVZ6VXdUVkk0ZDBoUldVUldVVkZFUkVKYVZtTXlWbmxOVlVKMkNtTnRZM2hNYlZZMFdWY3hkMkpIVlhWWk1qbDBUVVpyZDBWM1dVaExiMXBKZW1vd1EwRlJXVWxMYjFwSmVtb3dSRUZSWTBSUlowRkZSVEo0VmtscGEyb0tjREp3Ym1ncmVrVnNWbUZEVDFkeGMzQkNha0kzVUZObWNGZDNiWFpuWm5KbGJGRnFlbUZPUnl0M2RrUkRTM2xJUVdKVFltaHdjVkl5TnpVdlpXWmxZZ3BrVUdaaUszZFNTbWxhU2pSVk5rNU9UVVZ6ZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjJWQlRVRjNSMEV4VldSRmQwVkNMM2RSUTAxQlFYZExkMWxFQ2xaU01HcENRMUYzU1c5QlozWjZORWtyYmtwT1pTODBibVEyZEV4NFR6SlRTMmxuWm1jdlZERkhhVFpLWkVKbmNVaFZWRzFDUmtGM1EyZFpTVXR2V2trS2Vtb3dSVUYzU1VSU2QwRjNVa0ZKWjJaYVMxbDFiVzF1YUZKdFRrRTVNWEp6WkZoNmVXZG5WMHRpVkRodUwyaFNhRFJ0VjJaNVRTOVVjVzlEU1VRNVNncG1UekZOYlc1UFMxSkRLMHRUYUZoV1N6bDRWbkJwWjJONllsVlVWekZFVlZaVldGQTBXbk5XQ2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLRWhqQWlrTkQ0YVh2bEFNTk16VlFEM2dNaGZlQ0ZnUEk5VDBTelFFS3lnRUt4d0VTRWhJUWRISmhibk5oWTNScGIyNWZkRzF3TVJxd0FRb0hSWGhsWTNWMFpRb2dOV0ppT0dRM1l6VXdPVFl6TkRGa1pqazRaVGMxWXpBNU56TXhZbUk1TVdFS1Qzc2lZMjl1ZEhKaFkzUmZibUZ0WlNJNkltWmhZbU5oY2lJc0ltMWxkR2h2WkNJNklrTm9ZVzVuWlVOaGNrOTNibVZ5SWl3aWNHRnlZVzF6SWpwYklrTkJVakFpTENKUFYwNUZVakVpWFgwS01uc2lZMjl1ZEhKaFkzUmZibUZ0WlNJNkltWmhZbU5oY2lJc0ltMWxkR2h2WkNJNklsRjFaWEo1UVd4c1EyRnljeUo5Iiwic2lnbmF0dXJlIjoiTUVRQ0lHQjJJZkZlL00wblJVbmQ3MldBNEN6bDZ4Nm9rTERUZ05qWnBBcVduejNkQWlBa2NpZGtWTllvNXFmQTNrdyt5WVROaDByZExTYnBvbE1uUmdRd1lCZzdvdz09In0=\",\"CommitPayload\":\"eyJoZWFkZXIiOnsiY2hhaW5faWQiOiJteWNoYW5uZWwiLCJ0eF9pZCI6IjBiYWU2MGY2NmVhMDNlZTAxZmI5YmI5YzE0NmUyYWYxNTNiNTc5MDlkYmJiNWE1YjJlYmRlMDViYWMzM2IxZWQifSwicmVxdWVzdCI6ImV5SkRhR0ZwYm1OdlpHVkpSQ0k2SW5SeVlXNXpZV04wYVc5dVgzUnRjREVpTENKTVlXNW5Jam93TENKVWNtRnVjMmxsYm5STllYQWlPbTUxYkd3c0lrWmpiaUk2SWtOdmJXMXBkQ0lzSWtGeVozTWlPbHNpVGxkS2FVOUhVVE5aZWxWM1QxUlplazVFUm10YWFtczBXbFJqTVZsNlFUVk9lazE0V1cxSk5VMVhSVDBpWFN3aVNYTkpibWwwSWpwbVlXeHpaWDA9IiwicGF5bG9hZCI6IkNzc0hDbk1JQXhvTUNNRzc0NGNHRU5DSzl1d0NJZ2x0ZVdOb1lXNXVaV3dxUURCaVlXVTJNR1kyTm1WaE1ETmxaVEF4Wm1JNVltSTVZekUwTm1VeVlXWXhOVE5pTlRjNU1EbGtZbUppTldFMVlqSmxZbVJsTURWaVlXTXpNMkl4WldRNkZCSVNFaEIwY21GdWMyRmpkR2x2Ymw5MGJYQXhFdE1HQ3JZR0NnZFBjbWN4VFZOUUVxb0dMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VOTGFrTkRRV1JIWjBGM1NVSkJaMGxTUVV0eFVHbzJhbFZyU21WVGJucFFaek5CYW1sM2VVbDNRMmRaU1V0dldrbDZhakJGUVhkSmQyTjZSVXdLVFVGclIwRXhWVVZDYUUxRFZsWk5lRVY2UVZKQ1owNVdRa0ZuVkVOclRtaGlSMnh0WWpOS2RXRlhSWGhHYWtGVlFtZE9Wa0pCWTFSRVZrNW9ZbWxDUndwamJVWjFXVEpzZWxreU9IaEhWRUZZUW1kT1ZrSkJiMVJGUnpsNVducEZkVnBZYUdoaVdFSnpXbE0xYW1JeU1IaElSRUZoUW1kT1ZrSkJUVlJGTWs1b0NreHRPWGxhZWtWMVdsaG9hR0pZUW5OYVV6VnFZakl3ZDBob1kwNU5ha1YzVG5wQk0wMUVaM2hOVkVGM1YyaGpUazE2UlhkT2VrRXhUVVJuZUUxVVFYY0tWMnBDYzAxUmMzZERVVmxFVmxGUlIwVjNTbFpWZWtWVVRVSkZSMEV4VlVWRFFrMUxVVEpHYzJGWFduWmpiVFZ3V1ZSRlYwMUNVVWRCTVZWRlFuaE5UZ3BWTWtaMVNVVmFlVmxYTldwaFdFNXFZbnBGVUUxQk1FZEJNVlZGUTNoTlIxa3llSEJhVnpVd1RWSTRkMGhSV1VSV1VWRkVSRUphVm1NeVZubE5WVUoyQ21OdFkzaE1iVlkwV1ZjeGQySkhWWFZaTWpsMFRVWnJkMFYzV1VoTGIxcEplbW93UTBGUldVbExiMXBKZW1vd1JFRlJZMFJSWjBGRlJUSjRWa2xwYTJvS2NESndibWdyZWtWc1ZtRkRUMWR4YzNCQ2FrSTNVRk5tY0ZkM2JYWm5abkpsYkZGcWVtRk9SeXQzZGtSRFMzbElRV0pUWW1od2NWSXlOelV2WldabFlncGtVR1ppSzNkU1NtbGFTalJWTms1T1RVVnpkMFJuV1VSV1VqQlFRVkZJTDBKQlVVUkJaMlZCVFVGM1IwRXhWV1JGZDBWQ0wzZFJRMDFCUVhkTGQxbEVDbFpTTUdwQ1ExRjNTVzlCWjNaNk5Fa3Jia3BPWlM4MGJtUTJkRXg0VHpKVFMybG5abWN2VkRGSGFUWktaRUpuY1VoVlZHMUNSa0YzUTJkWlNVdHZXa2tLZW1vd1JVRjNTVVJTZDBGM1VrRkpaMlphUzFsMWJXMXVhRkp0VGtFNU1YSnpaRmg2ZVdkblYwdGlWRGh1TDJoU2FEUnRWMlo1VFM5VWNXOURTVVE1U2dwbVR6Rk5iVzVQUzFKREswdFRhRmhXU3psNFZuQnBaMk42WWxWVVZ6RkVWVlpWV0ZBMFduTldDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEtFaGgyNHUvdWR0WXlucnc1cUtFTUI3TE84WVVFeTUyTXpVa1NSQXBDQ2tBU0VoSVFkSEpoYm5OaFkzUnBiMjVmZEcxd01Sb3FDZ1pEYjIxdGFYUUtJRFZpWWpoa04yTTFNRGsyTXpReFpHWTVPR1UzTldNd09UY3pNV0ppT1RGaCIsInNpZ25hdHVyZSI6Ik1FUUNJR20waWg2dXQ3YjQ0NXR0Q1ZZTFlXQW9uZ1ZCTGptUWhRK0ozblRFNWNqVUFpQU1kVzFGSXFxMVAvbUdxTVRzSW9Yd2kxL3ZJNC9rb3l3V0d6SzZKV29TK0E9PSJ9\",\"RollbackPayload\":\"eyJoZWFkZXIiOnsiY2hhaW5faWQiOiJteWNoYW5uZWwiLCJ0eF9pZCI6IjdhZTIzNzc4YTM3ZGJkZTg5OWQ4MGY0YThhMDZkNTM3ODc5ZTM1OTc0MmYzYzczMDU3NWEwZWY3YTM1ODU4OTcifSwicmVxdWVzdCI6ImV5SkRhR0ZwYm1OdlpHVkpSQ0k2SW5SeVlXNXpZV04wYVc5dVgzUnRjREVpTENKTVlXNW5Jam93TENKVWNtRnVjMmxsYm5STllYQWlPbTUxYkd3c0lrWmpiaUk2SWxKdmJHeGlZV05ySWl3aVFYSm5jeUk2V3lKT1YwcHBUMGRSTTFsNlZYZFBWRmw2VGtSR2ExcHFhelJhVkdNeFdYcEJOVTU2VFhoWmJVazFUVmRGUFNKZExDSkpjMGx1YVhRaU9tWmhiSE5sZlE9PSIsInBheWxvYWQiOiJDc3NIQ25NSUF4b01DTUc3NDRjR0VKQ05pdTBDSWdsdGVXTm9ZVzV1Wld3cVFEZGhaVEl6TnpjNFlUTTNaR0prWlRnNU9XUTRNR1kwWVRoaE1EWmtOVE0zT0RjNVpUTTFPVGMwTW1Zell6Y3pNRFUzTldFd1pXWTNZVE0xT0RVNE9UYzZGQklTRWhCMGNtRnVjMkZqZEdsdmJsOTBiWEF4RXRNR0NyWUdDZ2RQY21jeFRWTlFFcW9HTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTkxha05EUVdSSFowRjNTVUpCWjBsU1FVdHhVR28yYWxWclNtVlRibnBRWnpOQmFtbDNlVWwzUTJkWlNVdHZXa2w2YWpCRlFYZEpkMk42UlV3S1RVRnJSMEV4VlVWQ2FFMURWbFpOZUVWNlFWSkNaMDVXUWtGblZFTnJUbWhpUjJ4dFlqTktkV0ZYUlhoR2FrRlZRbWRPVmtKQlkxUkVWazVvWW1sQ1J3cGpiVVoxV1RKc2Vsa3lPSGhIVkVGWVFtZE9Wa0pCYjFSRlJ6bDVXbnBGZFZwWWFHaGlXRUp6V2xNMWFtSXlNSGhJUkVGaFFtZE9Wa0pCVFZSRk1rNW9Da3h0T1hsYWVrVjFXbGhvYUdKWVFuTmFVelZxWWpJd2QwaG9ZMDVOYWtWM1RucEJNMDFFWjNoTlZFRjNWMmhqVGsxNlJYZE9la0V4VFVSbmVFMVVRWGNLVjJwQ2MwMVJjM2REVVZsRVZsRlJSMFYzU2xaVmVrVlVUVUpGUjBFeFZVVkRRazFMVVRKR2MyRlhXblpqYlRWd1dWUkZWMDFDVVVkQk1WVkZRbmhOVGdwVk1rWjFTVVZhZVZsWE5XcGhXRTVxWW5wRlVFMUJNRWRCTVZWRlEzaE5SMWt5ZUhCYVZ6VXdUVkk0ZDBoUldVUldVVkZFUkVKYVZtTXlWbmxOVlVKMkNtTnRZM2hNYlZZMFdWY3hkMkpIVlhWWk1qbDBUVVpyZDBWM1dVaExiMXBKZW1vd1EwRlJXVWxMYjFwSmVtb3dSRUZSWTBSUlowRkZSVEo0VmtscGEyb0tjREp3Ym1ncmVrVnNWbUZEVDFkeGMzQkNha0kzVUZObWNGZDNiWFpuWm5KbGJGRnFlbUZPUnl0M2RrUkRTM2xJUVdKVFltaHdjVkl5TnpVdlpXWmxZZ3BrVUdaaUszZFNTbWxhU2pSVk5rNU9UVVZ6ZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjJWQlRVRjNSMEV4VldSRmQwVkNMM2RSUTAxQlFYZExkMWxFQ2xaU01HcENRMUYzU1c5QlozWjZORWtyYmtwT1pTODBibVEyZEV4NFR6SlRTMmxuWm1jdlZERkhhVFpLWkVKbmNVaFZWRzFDUmtGM1EyZFpTVXR2V2trS2Vtb3dSVUYzU1VSU2QwRjNVa0ZKWjJaYVMxbDFiVzF1YUZKdFRrRTVNWEp6WkZoNmVXZG5WMHRpVkRodUwyaFNhRFJ0VjJaNVRTOVVjVzlEU1VRNVNncG1UekZOYlc1UFMxSkRLMHRUYUZoV1N6bDRWbkJwWjJONllsVlVWekZFVlZaVldGQTBXbk5XQ2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLRWhncGQ5M3I3clpiVG1icXZ5UFpCZXpMR0lGOE5rVUt1amNTUmdwRUNrSVNFaElRZEhKaGJuTmhZM1JwYjI1ZmRHMXdNUm9zQ2doU2IyeHNZbUZqYXdvZ05XSmlPR1EzWXpVd09UWXpOREZrWmprNFpUYzFZekE1TnpNeFltSTVNV0U9Iiwic2lnbmF0dXJlIjoiTUVRQ0lBMmxOcXdFcnpZbVkxWXl4RmVGQmdEWXp6eW9lUTBWWjBWd1VkVmtqSkU5QWlBU3JwTFpYTDNacjlFQnV0bDNnUStZQ0pXdjdsOElZbUc3ZGNoaEw5N2t3Zz09In0=\"}"
	crossTx := &eventproto.CrossTx{}
	err = json.Unmarshal([]byte(bz), crossTx)
	require.NoError(t, err)

	req := &TxRequest{}
	err = json.Unmarshal(crossTx.ExecutePayload, req)
	require.NoError(t, err)

	// prepare eve
	eve := event.NewExecuteTransactionEvent("5bb8d7c5096341df98e75c09731bb91a", chainID, crossTx.ExecutePayload, "", nil)

	initAdapterConf()
	resp, err := fabAdapter.Invoke(eve)
	require.Nil(t, err)
	require.NotNil(t, resp)
}

func TestUnmarshalCrossTx(t *testing.T) {
	bz := "{\"ChainID\":\"mychannel\",\"Index\":1,\"ExecutePayload\":\"eyJoZWFkZXIiOnsiY2hhaW5faWQiOiJteWNoYW5uZWwiLCJ0eF9pZCI6IjgzYjNiY2Q0M2VkNzE2OWU0NDhlMzUxNWZjYzNkM2I2OWI0NzdkMjI4NjkwMzQ2MTg4OTQ1NDNmNTIxNmJlN2QifSwicGF5bG9hZCI6IkNza0hDbkVJQXhvTUNKNncyb2NHRU1EYjRZNENJZ2x0ZVdOb1lXNXVaV3dxUURnellqTmlZMlEwTTJWa056RTJPV1UwTkRobE16VXhOV1pqWXpOa00ySTJPV0kwTnpka01qSTROamt3TXpRMk1UZzRPVFExTkRObU5USXhObUpsTjJRNkVoSVFFZzUwY21GdWMyRmpkR2x2Ymw4eU5CTFRCZ3EyQmdvSFQzSm5NVTFUVUJLcUJpMHRMUzB0UWtWSFNVNGdRMFZTVkVsR1NVTkJWRVV0TFMwdExRcE5TVWxEUzJwRFEwRmtSMmRCZDBsQ1FXZEpVa0ZMY1ZCcU5tcFZhMHBsVTI1NlVHY3pRV3BwZDNsSmQwTm5XVWxMYjFwSmVtb3dSVUYzU1hkamVrVk1DazFCYTBkQk1WVkZRbWhOUTFaV1RYaEZla0ZTUW1kT1ZrSkJaMVJEYTA1b1lrZHNiV0l6U25WaFYwVjRSbXBCVlVKblRsWkNRV05VUkZaT2FHSnBRa2NLWTIxR2RWa3liSHBaTWpoNFIxUkJXRUpuVGxaQ1FXOVVSVWM1ZVZwNlJYVmFXR2hvWWxoQ2MxcFROV3BpTWpCNFNFUkJZVUpuVGxaQ1FVMVVSVEpPYUFwTWJUbDVXbnBGZFZwWWFHaGlXRUp6V2xNMWFtSXlNSGRJYUdOT1RXcEZkMDU2UVROTlJHZDRUVlJCZDFkb1kwNU5la1YzVG5wQk1VMUVaM2hOVkVGM0NsZHFRbk5OVVhOM1ExRlpSRlpSVVVkRmQwcFdWWHBGVkUxQ1JVZEJNVlZGUTBKTlMxRXlSbk5oVjFwMlkyMDFjRmxVUlZkTlFsRkhRVEZWUlVKNFRVNEtWVEpHZFVsRldubFpWelZxWVZoT2FtSjZSVkJOUVRCSFFURlZSVU40VFVkWk1uaHdXbGMxTUUxU09IZElVVmxFVmxGUlJFUkNXbFpqTWxaNVRWVkNkZ3BqYldONFRHMVdORmxYTVhkaVIxVjFXVEk1ZEUxR2EzZEZkMWxJUzI5YVNYcHFNRU5CVVZsSlMyOWFTWHBxTUVSQlVXTkVVV2RCUlVVeWVGWkphV3RxQ25BeWNHNW9LM3BGYkZaaFEwOVhjWE53UW1wQ04xQlRabkJYZDIxMloyWnlaV3hSYW5waFRrY3JkM1pFUTB0NVNFRmlVMkpvY0hGU01qYzFMMlZtWldJS1pGQm1ZaXQzVWtwcFdrbzBWVFpPVGsxRmMzZEVaMWxFVmxJd1VFRlJTQzlDUVZGRVFXZGxRVTFCZDBkQk1WVmtSWGRGUWk5M1VVTk5RVUYzUzNkWlJBcFdVakJxUWtOUmQwbHZRV2QyZWpSSksyNUtUbVV2Tkc1a05uUk1lRTh5VTB0cFoyWm5MMVF4UjJrMlNtUkNaM0ZJVlZSdFFrWkJkME5uV1VsTGIxcEpDbnBxTUVWQmQwbEVVbmRCZDFKQlNXZG1Xa3RaZFcxdGJtaFNiVTVCT1RGeWMyUlllbmxuWjFkTFlsUTRiaTlvVW1nMGJWZG1lVTB2VkhGdlEwbEVPVW9LWms4eFRXMXVUMHRTUXl0TFUyaFlWa3M1ZUZad2FXZGplbUpWVkZjeFJGVldWVmhRTkZwelZnb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENoSVl4eTJ3TzJXN2M5OGNqclBtM0J4SnVIb1o2Vmw5Rnl5K0V0TUJDdEFCQ3MwQkVoQVNEblJ5WVc1ellXTjBhVzl1WHpJMEdyZ0JDZ2RGZUdWamRYUmxDZ2RGZUdWamRYUmxDaUE0WVRBM016UXdPRFF5TldZME5UVTJPVFl6TWpVelpUZ3habUUwT0RoaVlncE9leUpqYjI1MGNtRmpkRjl1WVcxbElqb2labUZpWTJGeUlpd2liV1YwYUc5a0lqb2lRMmhoYm1kbFEyRnlUM2R1WlhJaUxDSndZWEpoYlhNaU9sc2lRMEZTTUNJc0lrOVhUa1ZTSWwxOUNqSjdJbU52Ym5SeVlXTjBYMjVoYldVaU9pSm1ZV0pqWVhJaUxDSnRaWFJvYjJRaU9pSlJkV1Z5ZVVGc2JFTmhjbk1pZlE9PSIsInNpZ25hdHVyZSI6Ik1FUUNJSFhQbUpwRWYzZUxLYVZaSnhpNnRPTnZtVk5vdkFGUVYyOXVpWVNOQU5aMUFpQkhMU2ZUeWljbitxUGdEUzFsVDd4cDQ2K1JuMHI4M1VHem5SU09PZFI2MGc9PSJ9\",\"CommitPayload\":\"eyJoZWFkZXIiOnsiY2hhaW5faWQiOiJteWNoYW5uZWwiLCJ0eF9pZCI6IjgxYTQ4MGE0NGE2MTU3NmViZTVmYmZlNzdhYWFmYjA4YzgzYTI5OWUxOTYxYmQyY2E0MThkZWY3MjdiM2ZiY2QifSwicGF5bG9hZCI6IkNza0hDbkVJQXhvTUNKNncyb2NHRU5DUHZvOENJZ2x0ZVdOb1lXNXVaV3dxUURneFlUUTRNR0UwTkdFMk1UVTNObVZpWlRWbVltWmxOemRoWVdGbVlqQTRZemd6WVRJNU9XVXhPVFl4WW1ReVkyRTBNVGhrWldZM01qZGlNMlppWTJRNkVoSVFFZzUwY21GdWMyRmpkR2x2Ymw4eU5CTFRCZ3EyQmdvSFQzSm5NVTFUVUJLcUJpMHRMUzB0UWtWSFNVNGdRMFZTVkVsR1NVTkJWRVV0TFMwdExRcE5TVWxEUzJwRFEwRmtSMmRCZDBsQ1FXZEpVa0ZMY1ZCcU5tcFZhMHBsVTI1NlVHY3pRV3BwZDNsSmQwTm5XVWxMYjFwSmVtb3dSVUYzU1hkamVrVk1DazFCYTBkQk1WVkZRbWhOUTFaV1RYaEZla0ZTUW1kT1ZrSkJaMVJEYTA1b1lrZHNiV0l6U25WaFYwVjRSbXBCVlVKblRsWkNRV05VUkZaT2FHSnBRa2NLWTIxR2RWa3liSHBaTWpoNFIxUkJXRUpuVGxaQ1FXOVVSVWM1ZVZwNlJYVmFXR2hvWWxoQ2MxcFROV3BpTWpCNFNFUkJZVUpuVGxaQ1FVMVVSVEpPYUFwTWJUbDVXbnBGZFZwWWFHaGlXRUp6V2xNMWFtSXlNSGRJYUdOT1RXcEZkMDU2UVROTlJHZDRUVlJCZDFkb1kwNU5la1YzVG5wQk1VMUVaM2hOVkVGM0NsZHFRbk5OVVhOM1ExRlpSRlpSVVVkRmQwcFdWWHBGVkUxQ1JVZEJNVlZGUTBKTlMxRXlSbk5oVjFwMlkyMDFjRmxVUlZkTlFsRkhRVEZWUlVKNFRVNEtWVEpHZFVsRldubFpWelZxWVZoT2FtSjZSVkJOUVRCSFFURlZSVU40VFVkWk1uaHdXbGMxTUUxU09IZElVVmxFVmxGUlJFUkNXbFpqTWxaNVRWVkNkZ3BqYldONFRHMVdORmxYTVhkaVIxVjFXVEk1ZEUxR2EzZEZkMWxJUzI5YVNYcHFNRU5CVVZsSlMyOWFTWHBxTUVSQlVXTkVVV2RCUlVVeWVGWkphV3RxQ25BeWNHNW9LM3BGYkZaaFEwOVhjWE53UW1wQ04xQlRabkJYZDIxMloyWnlaV3hSYW5waFRrY3JkM1pFUTB0NVNFRmlVMkpvY0hGU01qYzFMMlZtWldJS1pGQm1ZaXQzVWtwcFdrbzBWVFpPVGsxRmMzZEVaMWxFVmxJd1VFRlJTQzlDUVZGRVFXZGxRVTFCZDBkQk1WVmtSWGRGUWk5M1VVTk5RVUYzUzNkWlJBcFdVakJxUWtOUmQwbHZRV2QyZWpSSksyNUtUbVV2Tkc1a05uUk1lRTh5VTB0cFoyWm5MMVF4UjJrMlNtUkNaM0ZJVlZSdFFrWkJkME5uV1VsTGIxcEpDbnBxTUVWQmQwbEVVbmRCZDFKQlNXZG1Xa3RaZFcxdGJtaFNiVTVCT1RGeWMyUlllbmxuWjFkTFlsUTRiaTlvVW1nMGJWZG1lVTB2VkhGdlEwbEVPVW9LWms4eFRXMXVUMHRTUXl0TFUyaFlWa3M1ZUZad2FXZGplbUpWVkZjeFJGVldWVmhRTkZwelZnb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENoSVlPN2FYWXBEaVJzY0tVbXBoUmRaQjkxcEQyRmIyOWZLVkVrb0tTQXBHRWhBU0RuUnlZVzV6WVdOMGFXOXVYekkwR2pJS0JrTnZiVzFwZEFvR1EyOXRiV2wwQ2lBNFlUQTNNelF3T0RReU5XWTBOVFUyT1RZek1qVXpaVGd4Wm1FME9EaGlZZz09Iiwic2lnbmF0dXJlIjoiTUVRQ0lIZkZWb1owbWRJTkFOUFp2MmJyL0JLYVNEL29ZQ0R0bkViQ0U5OTJ0NXlBQWlCam1TVTM0bnpDVzFSa1plbzV5OVgya2Qya3JJaXNBa1d6N1V6UDRiY3hCUT09In0=\",\"RollbackPayload\":\"eyJoZWFkZXIiOnsiY2hhaW5faWQiOiJteWNoYW5uZWwiLCJ0eF9pZCI6IjJiMTAxMGFiYmQ4YWQ5OWVjZWIwNDZmOWQzN2FiNTEyMjkyNGFjZjVkMDA2Y2NjNjUxNjgyODM4M2YzMjlkNDcifSwicGF5bG9hZCI6IkNza0hDbkVJQXhvTUNKNncyb2NHRUpDUi9JOENJZ2x0ZVdOb1lXNXVaV3dxUURKaU1UQXhNR0ZpWW1RNFlXUTVPV1ZqWldJd05EWm1PV1F6TjJGaU5URXlNamt5TkdGalpqVmtNREEyWTJOak5qVXhOamd5T0RNNE0yWXpNamxrTkRjNkVoSVFFZzUwY21GdWMyRmpkR2x2Ymw4eU5CTFRCZ3EyQmdvSFQzSm5NVTFUVUJLcUJpMHRMUzB0UWtWSFNVNGdRMFZTVkVsR1NVTkJWRVV0TFMwdExRcE5TVWxEUzJwRFEwRmtSMmRCZDBsQ1FXZEpVa0ZMY1ZCcU5tcFZhMHBsVTI1NlVHY3pRV3BwZDNsSmQwTm5XVWxMYjFwSmVtb3dSVUYzU1hkamVrVk1DazFCYTBkQk1WVkZRbWhOUTFaV1RYaEZla0ZTUW1kT1ZrSkJaMVJEYTA1b1lrZHNiV0l6U25WaFYwVjRSbXBCVlVKblRsWkNRV05VUkZaT2FHSnBRa2NLWTIxR2RWa3liSHBaTWpoNFIxUkJXRUpuVGxaQ1FXOVVSVWM1ZVZwNlJYVmFXR2hvWWxoQ2MxcFROV3BpTWpCNFNFUkJZVUpuVGxaQ1FVMVVSVEpPYUFwTWJUbDVXbnBGZFZwWWFHaGlXRUp6V2xNMWFtSXlNSGRJYUdOT1RXcEZkMDU2UVROTlJHZDRUVlJCZDFkb1kwNU5la1YzVG5wQk1VMUVaM2hOVkVGM0NsZHFRbk5OVVhOM1ExRlpSRlpSVVVkRmQwcFdWWHBGVkUxQ1JVZEJNVlZGUTBKTlMxRXlSbk5oVjFwMlkyMDFjRmxVUlZkTlFsRkhRVEZWUlVKNFRVNEtWVEpHZFVsRldubFpWelZxWVZoT2FtSjZSVkJOUVRCSFFURlZSVU40VFVkWk1uaHdXbGMxTUUxU09IZElVVmxFVmxGUlJFUkNXbFpqTWxaNVRWVkNkZ3BqYldONFRHMVdORmxYTVhkaVIxVjFXVEk1ZEUxR2EzZEZkMWxJUzI5YVNYcHFNRU5CVVZsSlMyOWFTWHBxTUVSQlVXTkVVV2RCUlVVeWVGWkphV3RxQ25BeWNHNW9LM3BGYkZaaFEwOVhjWE53UW1wQ04xQlRabkJYZDIxMloyWnlaV3hSYW5waFRrY3JkM1pFUTB0NVNFRmlVMkpvY0hGU01qYzFMMlZtWldJS1pGQm1ZaXQzVWtwcFdrbzBWVFpPVGsxRmMzZEVaMWxFVmxJd1VFRlJTQzlDUVZGRVFXZGxRVTFCZDBkQk1WVmtSWGRGUWk5M1VVTk5RVUYzUzNkWlJBcFdVakJxUWtOUmQwbHZRV2QyZWpSSksyNUtUbVV2Tkc1a05uUk1lRTh5VTB0cFoyWm5MMVF4UjJrMlNtUkNaM0ZJVlZSdFFrWkJkME5uV1VsTGIxcEpDbnBxTUVWQmQwbEVVbmRCZDFKQlNXZG1Xa3RaZFcxdGJtaFNiVTVCT1RGeWMyUlllbmxuWjFkTFlsUTRiaTlvVW1nMGJWZG1lVTB2VkhGdlEwbEVPVW9LWms4eFRXMXVUMHRTUXl0TFUyaFlWa3M1ZUZad2FXZGplbUpWVkZjeFJGVldWVmhRTkZwelZnb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENoSVlWMEJPZG9XcnBJUjlHeHBCa0lKbnpGMHMxSjlnbGlKOUVrNEtUQXBLRWhBU0RuUnlZVzV6WVdOMGFXOXVYekkwR2pZS0NGSnZiR3hpWVdOckNnaFNiMnhzWW1GamF3b2dPR0V3TnpNME1EZzBNalZtTkRVMU5qazJNekkxTTJVNE1XWmhORGc0WW1JPSIsInNpZ25hdHVyZSI6Ik1FUUNJRzl0eEhrVGRnNlpQUkNVbFRnSWRXczg1MGlpVmVFcG5lNkF2WVQzUlJWa0FpQTV6Qllkc0NhVStFclhsQVdqT3ZrSjBnMi9wbWlhZUxpMGIreDZZM0RjQlE9PSJ9\"}"
	crossTx := &eventproto.CrossTx{}
	err := json.Unmarshal([]byte(bz), crossTx)
	require.NoError(t, err)

	req := &TxRequest{}
	err = json.Unmarshal(crossTx.ExecutePayload, req)
	require.NoError(t, err)

	txProposal := &fab.TransactionProposal{Proposal: &pb.Proposal{}}
	err = proto.Unmarshal(req.Payload, txProposal)
	require.NoError(t, err)
}

func TestFabricAdapter_InvokeWithSignedProposalByte(t *testing.T) {
	fabAdapter, err := NewFabricAdapter(chainID, configFile, nil, logger.GetLogger(logger.ModuleAdapter))
	require.Nil(t, err)
	require.NotNil(t, fabAdapter)

	// parse crossTx
	ExecutePayload := "eyJoZWFkZXIiOnsiY2hhaW5faWQiOiJteWNoYW5uZWwiLCJ0eF9pZCI6IjRlNDkxNWViMDRmNjg0NTk0OGNjODU1ZGI1MjAyOTFhMTJlNzgxMWVhYjM4OWRiYTRlOTQwZmY5NjU0NzEwMTIifSwicGF5bG9hZCI6IkNza0hDbkVJQXhvTUNNeVMxWWNHRU5paCtxUURJZ2x0ZVdOb1lXNXVaV3dxUURSbE5Ea3hOV1ZpTURSbU5qZzBOVGswT0dOak9EVTFaR0kxTWpBeU9URmhNVEpsTnpneE1XVmhZak00T1dSaVlUUmxPVFF3Wm1ZNU5qVTBOekV3TVRJNkVoSVFFZzUwY21GdWMyRmpkR2x2Ymw4eE9STFRCZ3EyQmdvSFQzSm5NVTFUVUJLcUJpMHRMUzB0UWtWSFNVNGdRMFZTVkVsR1NVTkJWRVV0TFMwdExRcE5TVWxEUzJwRFEwRmtSMmRCZDBsQ1FXZEpVa0ZMY1ZCcU5tcFZhMHBsVTI1NlVHY3pRV3BwZDNsSmQwTm5XVWxMYjFwSmVtb3dSVUYzU1hkamVrVk1DazFCYTBkQk1WVkZRbWhOUTFaV1RYaEZla0ZTUW1kT1ZrSkJaMVJEYTA1b1lrZHNiV0l6U25WaFYwVjRSbXBCVlVKblRsWkNRV05VUkZaT2FHSnBRa2NLWTIxR2RWa3liSHBaTWpoNFIxUkJXRUpuVGxaQ1FXOVVSVWM1ZVZwNlJYVmFXR2hvWWxoQ2MxcFROV3BpTWpCNFNFUkJZVUpuVGxaQ1FVMVVSVEpPYUFwTWJUbDVXbnBGZFZwWWFHaGlXRUp6V2xNMWFtSXlNSGRJYUdOT1RXcEZkMDU2UVROTlJHZDRUVlJCZDFkb1kwNU5la1YzVG5wQk1VMUVaM2hOVkVGM0NsZHFRbk5OVVhOM1ExRlpSRlpSVVVkRmQwcFdWWHBGVkUxQ1JVZEJNVlZGUTBKTlMxRXlSbk5oVjFwMlkyMDFjRmxVUlZkTlFsRkhRVEZWUlVKNFRVNEtWVEpHZFVsRldubFpWelZxWVZoT2FtSjZSVkJOUVRCSFFURlZSVU40VFVkWk1uaHdXbGMxTUUxU09IZElVVmxFVmxGUlJFUkNXbFpqTWxaNVRWVkNkZ3BqYldONFRHMVdORmxYTVhkaVIxVjFXVEk1ZEUxR2EzZEZkMWxJUzI5YVNYcHFNRU5CVVZsSlMyOWFTWHBxTUVSQlVXTkVVV2RCUlVVeWVGWkphV3RxQ25BeWNHNW9LM3BGYkZaaFEwOVhjWE53UW1wQ04xQlRabkJYZDIxMloyWnlaV3hSYW5waFRrY3JkM1pFUTB0NVNFRmlVMkpvY0hGU01qYzFMMlZtWldJS1pGQm1ZaXQzVWtwcFdrbzBWVFpPVGsxRmMzZEVaMWxFVmxJd1VFRlJTQzlDUVZGRVFXZGxRVTFCZDBkQk1WVmtSWGRGUWk5M1VVTk5RVUYzUzNkWlJBcFdVakJxUWtOUmQwbHZRV2QyZWpSSksyNUtUbVV2Tkc1a05uUk1lRTh5VTB0cFoyWm5MMVF4UjJrMlNtUkNaM0ZJVlZSdFFrWkJkME5uV1VsTGIxcEpDbnBxTUVWQmQwbEVVbmRCZDFKQlNXZG1Xa3RaZFcxdGJtaFNiVTVCT1RGeWMyUlllbmxuWjFkTFlsUTRiaTlvVW1nMGJWZG1lVTB2VkhGdlEwbEVPVW9LWms4eFRXMXVUMHRTUXl0TFUyaFlWa3M1ZUZad2FXZGplbUpWVkZjeFJGVldWVmhRTkZwelZnb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENoSVlneFpha2dlMEVKQXZPU3FLbEM2NHA5ZzVUV3lSUGdzRkVyUURDckVEQ3E0REVoQVNEblJ5WVc1ellXTjBhVzl1WHpFNUdwa0RDZ2RGZUdWamRYUmxDZ2RGZUdWamRYUmxDczBCQkFBQUFBRUFBQUFNQUFBQVkyOXVkSEpoWTNST1lXMWxBUUFBQUFZQUFBQm1ZV0pqWVhJQkFBQUFCd0FBQUdOeWIzTnpTVVFCQUFBQUlBQUFBRFpqWVdJd05qRmpaVFEyWmpReVpqbGhOV1E1T1RJNU0yUTFOVE14WXpFd0FRQUFBQVlBQUFCdFpYUm9iMlFCQUFBQURnQUFBRU5vWVc1blpVTmhjazkzYm1WeUFRQUFBQVlBQUFCd1lYSmhiWE1CQUFBQU5nQUFBQUlBQUFBQkFBQUFCQUFBQUVOQlVqQUJBQUFBQkFBQUFFTkJVakFCQUFBQUJRQUFBRTlYVGtWU0FRQUFBQVVBQUFCUFYwNUZVZ3FTQVFRQUFBQUJBQUFBREFBQUFHTnZiblJ5WVdOMFRtRnRaUUVBQUFBR0FBQUFabUZpWTJGeUFRQUFBQWNBQUFCamNtOXpjMGxFQVFBQUFDQUFBQUEyWTJGaU1EWXhZMlUwTm1ZME1tWTVZVFZrT1RreU9UTmtOVFV6TVdNeE1BRUFBQUFHQUFBQWJXVjBhRzlrQVFBQUFBVUFBQUJTWlhObGRBRUFBQUFHQUFBQWNHRnlZVzF6QVFBQUFBUUFBQUFBQUFBQUNpQTJZMkZpTURZeFkyVTBObVkwTW1ZNVlUVmtPVGt5T1ROa05UVXpNV014TUE9PSIsInNpZ25hdHVyZSI6Ik1FVUNJUURPVDJ3SC9jWHJZZDdEWVpuN0tHVEp6a3NsTG01L09CUk8vODM4ZkNraktnSWdQNDVqcWM4dER2Q0w2QlhQV3VTTWFPM2dEWm50VXFhYmorRjNjbHA4eVRZPSJ9"

	// prepare eve
	eve := event.NewExecuteTransactionEvent("crossID", chainID, []byte(ExecutePayload), "", nil)

	initAdapterConf()
	resp, err := fabAdapter.Invoke(eve)
	require.Nil(t, err)
	require.NotNil(t, resp)
}

func initAdapterConf() {
	conf.Config.AdapterConfigs = []*conf.AdapterConfig{
		{
			Provider:   "chainmaker",
			ChainID:    "chain1",
			ConfigPath: "", // TODO
		},
		{
			Provider:   "fabric",
			ChainID:    "mychannel",
			ConfigPath: "config/fabric/fabric_sdk.yml",
			ExtraConf: map[string][]string{
				"org_user": {"User1"},
				"org_peer": {"peer0.org1.example.com", "peer0.org2.example.com"},
			},
		},
	}
}
